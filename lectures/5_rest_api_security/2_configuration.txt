
    Configuration 
        เราสามารถตั้งค่า user ได้ดังนี้ 

        เป็น method สำหรับคั้งค่า user เก็บไว้ใน memory
        @Bean 
        public InMemoryUserDetailsManager userDetailsManager() {

        }

        UserDetails 
            ใชัสำหรับตั้งค่า user 
            UserDetails user = User.builder()
                .username("")
                .passwrod("")
                .roles("", ""),
                .build();

        password แบ่งการเก็บเป็ 2 รูปแบบ
            {noop} Plain text password 
                เป็น password ในรูปแบบตัวอักษรทั่วไป ไม่มีการเข้ารหัส
            {brypt}
                เข้ารหัสด้วย BCrypt ซึ่งเป็น one way hashing


        เราสามารถตรวจสอบ Role ของผู้ใช้ได้ด้วยคำสั่ง
        requestMatchers(<path to match>).hasRole(<role>);
        requestMatchers(<http method>, <path to match>).hasRole(<role>);

        @Bean
        public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
            http.authorizeHttpRequests(config -> 
                config.requestMatchers(HttpMethod.GET, "/api/employees").hasRole("EMPLOYEE"));

            http.httpBasic(Customizer.withDefaults());

            // เราสามารถ disable ได้ถ้าเป็นในรูปแบบ Stateless REST API
            http.csrf(csrf -> csrf.disable());

            return http.build();
        }