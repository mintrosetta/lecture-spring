
    Hibernate
        เป็น framework ที่จัดการระหว่าง Java Object กับ database

        Your java application <---> Hibernate <---> Database

        โดย Hibernate จะคอยจัดการกับ low-level sql ให้กับเรา
        สาารถืำ Object-to-Relational Mapping (ORM)

    Object to Relational Mapping
        เป็นการเชื่อมต่อโครงสร้างข้อมูลระหว่าง class กับ table
        เช่น 
            class User
                id: int
                firstName: string
                lastName: string 
                email: string 

            table Users 
                id INT 
                fist_name VARCHAR(45)
                last_name VARCHAR(45)
                email VARCHAR(45)

    Jakarta Persistence API (JPA)
        เป็น standard api สำหรับ ORM

        โดยจะมีเพียงชุดของ inteface เท่านั้น จะต้องนำไป implement ต่อเอง
        
    JPA Vendor implement
        โดยจะมีหลาย ๆ เจ้าสืบทอด JPA ไปทำการเขียนความสามารถขึ้นมาเองดังนี้
            Hibernate
            EclipseLink

    ประโยชน์ของ JPA 
        เมื่อมีมาตรฐานของ API, ทำให้เราไม่จำเป็นต้องติดอยู่กับระบบ ๆ เดียว
        สามารถดูแลรักษาได้ง่าย
        สาารถสลับไปมาระหว่าง Hibernate กับ EclipseLink ได้

    EntityManager 
        เป็น JPA Helper Object ที่ช่วยจัดกับกับข้อมูลและฐานข้อมูล
        โดยสามารถทำได้ทั้งใช้งาน function ที่มีให้และเขียน sql เอง

    JDBC (Java Database Connectivity)
        API (Application Programming Interface) หรือ library ในจาวาที่ใช้สำหรับติดต่อกับฐานข้อมูล
        ที่เป็นแบบ relational อย่างเช่น MS SQL, Oracle, MySQL, DB2, Informix เป็นต้น

    เราสามารถตั้งค่าให้ Hibernate สร้าง table ให้กับเราได้ โดยอ้างอิงจาก Java Code (ไม่แนะนำให้ใช้ใน production)
        application.properties 
            spring.jpa.hibernate.ddl-auto=none 
                ไม่มีอะไรเกิดขึ้น
            spring.jpa.hibernate.ddl-auto=create-only
                สร้าง table อย่างเดียว
            spring.jpa.hibernate.ddl-auto=drop
                ลบ table อย่างเดียว
            spring.jpa.hibernate.ddl-auto=create 
                เมื่อ application ทำงาน ให้ทำการลบ table เก่าออก และสร้าง table ใหม่ขึ้นมา
            spring.jpa.hibernate.ddl-auto=create-drop 
                เมื่อ application ทำงาน ให้ทำการลบ table เก่าออก และสร้าง table ใหม่ขึ้นมา
                เมื่อ application หยุดทำงาน จะ drop table ทิ้งทั้งหมด
                นิยมใช้ใน unit testing
            spring.jpa.hibernate.ddl-auto=validate
                ตรวจสอบโครงสร้างของฐานข้อมูล
            spring.jpa.hibernate.ddl-auto=update 
                จัดการอัพเดทที่เหมาะสมให้กับเรา
